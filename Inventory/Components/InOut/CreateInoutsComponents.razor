@using Entity.obj
@using Business
@using Inventory.Entity;

<div class="form-group">
    <select class="form-control" @onchange="OnchangeWarehouse">

        <option value=""> Seleccione una bodega  </option >


        @foreach(var warehouse in wherehouseEntities)
        {
           
            <option value="@warehouse.WherehouseId">@warehouse.WherehouseName </option>
        
        
        
        
        }





    </select>






</div>

<EditForm Model="inout">
    <div class="form-group">
        <label>Producto</label>
        <InputSelect class="form-control" @bind-Value="inout.StorageId">
            <option>Seleccione producto...</option>
            @foreach (var storage in storages)
            {
                <option value="@storage.StorageId">@storage.Product.ProductName</option>
            }
        </InputSelect>
    </div>

    <div class="form-group">
        <label>Cantidad</label>
        <InputNumber class="form-control" @bind-Value="inout.Quantity" />
    </div>
    <div class="form-group">
        <label>Es una entrada</label>
        <InputCheckbox class="form-control" @bind-Value="inout.IsInput" />
    </div>
    
        <input type="button" value="@Button_value" @onclick="save" class="form-control btn btn-warning" />
    
</EditForm>







@code {
    InOutEntity inout = new InOutEntity();

    List<WherehouseEntity> wherehouseEntities = new List<WherehouseEntity>();
    List<StorageEntity> storages = new List<StorageEntity>();
    string Button_value => inout.IsInput ? "Registrar Entrada" : "Registrar salida";
    protected override async Task OnInitializedAsync()
    {
        wherehouseEntities = B_WhereHouse.Get();
    }


    private void OnchangeWarehouse(ChangeEventArgs e)
    {

        var id_warehouse = e.Value.ToString();

        storages = B_Storage.GetStorages_wherehouse(id_warehouse);



    }
    private void save() { }
}
